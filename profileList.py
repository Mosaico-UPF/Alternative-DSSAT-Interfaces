# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'profileList.ui'
#
# Created by: PyQt5 UI code generator 5.15.11
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import Qt
from PyQt5.QtWidgets import QDialog, QListWidgetItem


class Ui_Dialog(object):
    def setupUi(self, Dialog):
        Dialog.setObjectName("Dialog")
        Dialog.resize(400, 300)
        self.buttonBox = QtWidgets.QDialogButtonBox(Dialog)
        self.buttonBox.setGeometry(QtCore.QRect(30, 240, 341, 32))
        self.buttonBox.setOrientation(QtCore.Qt.Horizontal)
        self.buttonBox.setStandardButtons(QtWidgets.QDialogButtonBox.Cancel|QtWidgets.QDialogButtonBox.Ok)
        self.buttonBox.setObjectName("buttonBox")
        self.listWidget = QtWidgets.QListWidget(Dialog)
        self.listWidget.setGeometry(QtCore.QRect(50, 30, 256, 192))
        self.listWidget.setObjectName("listWidget")

        self.retranslateUi(Dialog)
        self.buttonBox.accepted.connect(Dialog.accept) # type: ignore
        self.buttonBox.rejected.connect(Dialog.reject) # type: ignore
        QtCore.QMetaObject.connectSlotsByName(Dialog)

    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "Dialog"))


class ProfileListDialog(QDialog):
    def __init__(self, profiles: list[dict], parent=None):
        super().__init__(parent)
        self.ui = Ui_Dialog()
        self.ui.setupUi(self)

        self.selected_profile = None
        self.populateProfiles(profiles)

        self.ui.buttonBox.accepted.connect(self.accept)   # OK / duplo-clique
        self.ui.buttonBox.rejected.connect(self.reject)
        self.ui.listWidget.itemDoubleClicked.connect(self.accept)

        if self.ui.listWidget.count() > 0:
            self.ui.listWidget.setCurrentRow(0)

    def populateProfiles(self, profiles):
        self.ui.listWidget.clear()
        for p in profiles:
            item = QListWidgetItem(p["code"])
            item.setData(Qt.UserRole, p)
            self.ui.listWidget.addItem(item)

    def accept(self):
        item = self.ui.listWidget.currentItem()
        if not item:
            QtWidgets.QMessageBox.warning(self, "Invalid Selection",
                                          "First, chose a profile.")
            return
        self.selected_profile = item.data(Qt.UserRole)
        self.selected_code = self.selected_profile["code"]
        super().accept()
